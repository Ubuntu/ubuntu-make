<?xml version='1.0' encoding='UTF-8'?>
<matrix-project>
  <actions/>
  <description>Tests execution for ubuntu make on trusty using latest available ubuntu make test.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.queueSorter.PrioritySorterJobProperty>
      <priority>100</priority>
    </hudson.queueSorter.PrioritySorterJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>target</name>
          <description>Test target (system or trunk). This depends on which setup job previously executed and is just a tag here.</description>
          <defaultValue></defaultValue>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.build__publisher.ExternalProjectProperty/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>type</name>
      <values>
        <string>pep8</string>
        <string>small</string>
        <string>medium</string>
        <string>large</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>ps-trusty-desktop-amd64-1</string>
        <string>ps-trusty-desktop-i386-1</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -eu

RESULT_DIR=$PWD
# remove old artefacts.
rm -rf * .* 2&gt;/dev/null || true

echo &quot;Testing $type tests on ubuntu make $target&quot;
ADDITIONAL_OPTS=&quot;&quot;

if [ &quot;$target&quot; == &quot;system&quot; ]; then
    ADDITIONAL_OPTS=&quot;--system &quot;
fi

cd ~/ubuntu-make

TEST_ENV=&quot;DISPLAY=:0&quot;

# set proxy for all tests but small ones (proxy doesn&apos;t know about localhost and try to interfere)
if [ &quot;$type&quot; != small ]; then
    TEST_ENV=&quot;http_proxy=http://squid.internal:3128 https_proxy=http://squid.internal:3128 $TEST_ENV&quot;
fi

# we pull docker image in advance
if [ &quot;$type&quot; == medium ]; then
    # TODO: don&apos;t skip on amd64
    # we skip medium on non amd64, containers are 64 bits
    #if [ &quot;$(arch)&quot; != x86_64 ]; then
        echo &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;testsuite name=&quot;nosetests&quot; tests=&quot;1&quot; errors=&quot;0&quot; failures=&quot;0&quot; skip=&quot;0&quot;&gt;&lt;testcase classname=&quot;ignore&quot; name=&quot;medium._est_not_supported&quot; time=&quot;0.0&quot;&gt;{}&lt;/testcase&gt;&lt;/testsuite&gt;&apos; &gt; ${RESULT_DIR}/nosetests.xml
        exit 0
    #fi

    # we need to restart docker.io so that first command gives the correct proxy env variables
    sudo restart docker.io

fi

sudo su $(whoami) -c &quot;$TEST_ENV dbus-launch eatmydata ./runtests --coverage --publish ${ADDITIONAL_OPTS} $type&quot; || true

# copy artefacts
cp nosetests.* ${RESULT_DIR}
cp .coverage ${RESULT_DIR}
cp -a *coverage* ${RESULT_DIR}
cp *.log ${RESULT_DIR}
cp -a /tmp/config ${RESULT_DIR}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>**</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>**/nosetests.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.build__publisher.BuildPublisher>
      <publishUnstableBuilds>true</publishUnstableBuilds>
      <publishFailedBuilds>true</publishFailedBuilds>
      <postActions class="vector"/>
    </hudson.plugins.build__publisher.BuildPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger>
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs class="java.util.Collections$EmptyList"/>
          <projects>tests-collect, </projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>true</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers/>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>
